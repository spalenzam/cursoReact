{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cualquierPalabra","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifts","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAoCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAgB,OAAKP,GAAL,mBAAoBO,OAClDN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAtBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCaLO,EAZK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAI1B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCsDFO,EA3DC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAwBf,ECrByB,SAACA,GAG1B,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAItB,CAACpB,IAEGqB,EDCwBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAGpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAEjDoB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAaQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAGQA,GAFCA,EAAIC,aEftBgB,EA/BM,WAIjB,MAAoCzC,mBAAS,CAAC,kBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCpBjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.9a4135ac.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        //console.log(e.target.value)\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            //se llama con el callback y llama el estado anterior\r\n            setCategories(cualquierPalabra => [inputValue, ...cualquierPalabra]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=ls3TlaPcUQIYKaF5uhbwSxA24LmiRXh7`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ( {title, url} ) => {\r\n\r\n    //console.log({id, title, url})\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifts';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    //const [images, setImages] = useState([]);\r\n\r\n    //const state = useFetchGifts();\r\n    //console.log(state)\r\n    //Hago la desestructuración\r\n    // const { data, loading} = useFetchGifts();\r\n    // console.log(data);\r\n    // console.log(loading);\r\n    \r\n    /*\r\n    //Se ejecuta cuando es renderizado por primera vez el componente, eso evita que cada vez que se ejecuta algo nuevo en el componenete\r\n    //esa intrucción se ejecute de nuevo y de nuevo.. \r\n    //siempre y cuando no nos falta el [] a lo último\r\n    //Más tarde agregamos el category en los [] ya que si la category cambia se vuelve a renderizar\r\n    // useEffect(() => {\r\n    //     getGift(category)\r\n    //         .then(setImages);\r\n    // }, [category]);*/\r\n\r\n\r\n    //Ahora hacemos la mejora, en vez de usar useEffect vamos a usar este hooks, que adentro va a tener el useEffect\r\n    //data:images es para renombrar la variable\r\n    const {data:images, loading} = useFetchGifts(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            { loading && <p>Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    \r\n                    // images.map((i)=>(\r\n                    //     <li key={i.id}>{i.title}</li>\r\n                    // ))\r\n\r\n                    //Acá podemos desestructurar las propiedades \r\n                    // images.map( ({ id, title }) => (\r\n                    //     <li key={id}>{title}</li>\r\n                    // ))\r\n\r\n                    //Esto lo cambiamos para hacerlo componente\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            //envio las propiedades de la imagen de forma independiente\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","//Los hooks son funciones \r\n//no se usa jsx \r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifts = (category) => {\r\n    \r\n    //cuando usemos useFetchGifts va a tener un estado por defecto\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n               \r\n                setstate({\r\n                    data:imgs,\r\n                    loading: false\r\n                });               \r\n                \r\n            })\r\n    }, [category]);\r\n\r\n    return state; // {data:[], loading: true}\r\n}\r\n\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories=['Pepito', 'Menguito', 'Honguito'];\r\n\r\n    const [categories, setCategories] = useState(['Tom And Jerry']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     setCategories(['Macarena', ...categories]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>           \r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                        // <li key={category}>{ category }</li>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}